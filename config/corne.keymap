


/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB       &kp Q  &kp W  &kp E             &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_GUI  &kp A  &kp S  &kp D             &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT     &kp Z  &kp X  &kp C             &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                            &kp LEFT_CONTROL  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |    DEL   |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     | CapsLock |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |          |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1      &kp N2     &kp N3      &kp N4       &kp N5        &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &kp DEL
&trans  &kp LC(B)   &kp HOME   &kp PG_DN   &kp PG_UP    &kp END       &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none   &kp CAPSLOCK
&trans  &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp K_REDO    &none     &none     &none   &none      &none   &trans
                               &trans      &trans       &trans        &trans    &mo 3     &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp PLUS   &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp UNDER  &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &trans    &mo 3     &trans       &trans     &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6          &kp F7      &kp F8             &kp F9           &kp F10     &kp F11            &kp F12
&trans  &trans  &trans  &trans  &trans  &kp C_BRI_UP    &kp C_PREV  &kp C_VOLUME_DOWN   &kp C_VOLUME_UP       &kp C_NEXT  &kp LS(PRINTSCREEN)  &kp PRINTSCREEN
&trans  &trans  &trans  &trans  &trans  &kp C_BRI_DN    &kp K_MUTE  &kp C_PLAY_PAUSE   &kp C_STOP   &kp  C_RANDOM_PLAY     &trans             &trans
                        &trans  &trans  &trans          &trans      &trans             &trans
            >;
        };
    };
};



